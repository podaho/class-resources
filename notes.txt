Mac Short Cuts and Tips

cmd + c    (Copy)
cmd + v    (Paste)
cmd + x    (Cut)
cmd + z    (Undo)
cmd        (Redo)
 + shift
 + z
cmd + s    (Save)
cmd + q    (Close application)
cmd + w    (Close window)
cmd + t    (New window - doesn’t work in IntelliJ)
cmd + f    (Search for a keyword)
cmd + r    (Refresh the browser)
cmd        (Hard refresh browser, clearing cache)
 + shift
 + r

cmd + tab      (Cycle between windows)
cmd + space    (Spotlight search)
shift + arrows (Highlight text)
cmd + arrows   (Move cursor to the end of a line/beginning of a line)
opt + arrows   (Move from one word to the next)

4 fingers      (View all windows)
 + up

2 fingers      (Scroll)
 + up/down


Consider BetterSnapTool for quickly resizing windows

--------------------------------------------------------------------

Terminal Commands

-- Common Commands --

cd /      (Navigates to the root directory)
cd ~  (Navigates to the home directory)
ls     (list files in the current directory)
ls -a  (list all files including hidden files; these start with a .)
pwd    (Print working directory to see what folder you are in)
mkdir  (Create a directory)
cd     (Change directories)
cd ..  (Go to the parent directory)
touch  (Creates an empty file)
cat    (Show the contents of a file)
mv     (Move a file with mv <filename> <location and or new name>)
cp     (Copy a file with cp <file to copy> <location and or name of copy>)
rm     (Delete files)
rm -r  (Adds recursive flag and allows deletion of files and empty directories)
rm -rf (Add flag -f (force) to delete directories that are not empty)
clear  (Clears console display but still can scroll through history)

Use up and down arrows to scroll through previous commands
Use tab to autocomplete file paths

--------------------------------------------------------------------

Git From Terminal


-- Common Commands --

git init            (Initialize a repository) AVOID NESTED REPOS
git status          (See which files need to be added or have been added)
git add <filename>  (Add files to the staging area to be committed)
git diff --cached   (See the changes of the files that will be committed)
git commit          (Commit the changes to Git)
git log             (View all previous commits)
git rm --cached     (Remove files from staging by adding the file name)
git commit -m “”    (To add commit message without an editor)

To save commit message in Vim, type esc, then :wq

-- GitHub Set Up --

Assuming you have an account and a local repo with committed changes:

1) Create a repository (click plus button at the top of the GitHub nav bar)
2) Paste the commands on GitHub of the second option in your terminal to push initially up to GitHub


-- Best Practice --

Add and commit frequently any time you complete a small piece of functionality
Write descriptive commit messages
Push commits regularly (at least twice a day)

--------------------------------------------------------------------

Dev Resources
    Google - the best resource
    w3schools.com - very helpful quick reference
    Mozilla Developer Network (MDN) - deeper technical reference than w3schools
    Stackoverflow - forum for programming questions
    Codecademy - many tutorials with exercises to debug
    Lynda - free learning resource through Bibliotech Bexar County
    Treehouse.com - free learning resource through Bibliotech Bexar County
